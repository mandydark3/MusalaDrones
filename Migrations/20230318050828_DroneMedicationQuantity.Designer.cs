// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusalaDrones.Data;

#nullable disable

namespace MusalaDrones.Migrations
{
    [DbContext(typeof(MusalaDronesDbContext))]
    [Migration("20230318050828_DroneMedicationQuantity")]
    partial class DroneMedicationQuantity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusalaDrones.Model.Drone", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BatteryCapacity")
                        .HasColumnType("int");

                    b.Property<int>("Model")
                        .HasColumnType("int");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<float>("WeightLimit")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("MusalaDrones.Model.DroneMedication", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DroneID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MedicationID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DroneID");

                    b.HasIndex("MedicationID");

                    b.ToTable("DronesMedications");
                });

            modelBuilder.Entity("MusalaDrones.Model.Log", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BatterLevel")
                        .HasColumnType("int");

                    b.Property<DateTime>("Checked")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DroneID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ID");

                    b.HasIndex("DroneID");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("MusalaDrones.Model.Medication", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("MusalaDrones.Model.DroneMedication", b =>
                {
                    b.HasOne("MusalaDrones.Model.Drone", "Drone")
                        .WithMany("DroneMedications")
                        .HasForeignKey("DroneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MusalaDrones.Model.Medication", "Medication")
                        .WithMany("MedicationsDrone")
                        .HasForeignKey("MedicationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drone");

                    b.Navigation("Medication");
                });

            modelBuilder.Entity("MusalaDrones.Model.Log", b =>
                {
                    b.HasOne("MusalaDrones.Model.Drone", "Drone")
                        .WithMany()
                        .HasForeignKey("DroneID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drone");
                });

            modelBuilder.Entity("MusalaDrones.Model.Drone", b =>
                {
                    b.Navigation("DroneMedications");
                });

            modelBuilder.Entity("MusalaDrones.Model.Medication", b =>
                {
                    b.Navigation("MedicationsDrone");
                });
#pragma warning restore 612, 618
        }
    }
}
